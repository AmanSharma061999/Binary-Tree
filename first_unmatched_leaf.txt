
import java.util.*;
public class Main
{
    public static class Node 
    {
        int data;
        Node left;
        Node right;
        Node(int data)
        {
            this.data=data;
        }
    }
     static void unmatchleaf(Node root,Node root1)
     {
         if(root==null)
         return ;
         
         Stack<Node>s1=new Stack<>();
         Stack <Node>s2= new Stack<>();
         s1.push(root);
         s2.push(root1);
         
         while(!s1.isEmpty() || !s2.isEmpty())
         {
             Node temp1=s1.peek();
             s1.pop();
             
             while(temp1!=null && isLeaf(temp1)!=true)
             {
                 s1.push(temp1.right);
                 s1.push(temp1.left);
                 temp1=s1.peek();
                 s1.pop();
             }
             
            Node temp2=s2.peek();
             s2.pop();
             
             while(temp2!=null && isLeaf(temp2)!=true)
             {
                 s2.push(temp2.right);
                 s2.push(temp2.left);
                 temp2=s2.peek();
                 s2.pop();
             }
             if(temp1!=null && temp2!=null)
             {
                 if(temp1.data != temp2.data)
                 {
                     System.out.println(temp1.data+" "+temp2.data);
                     return;
                 }
             }
         }
         
     }
    
	public static void main(String[] args) 
	{
    Node root1 = new Node(5);
    root1.left = new Node(2);
    root1.right = new Node(7);
    root1.left.left = new Node(10);
    root1.left.right = new Node(11);
 
    Node root2 = new Node(6);
    root2.left = new Node(10);
    root2.right = new Node(15);
    
    unmatchleaf(root1,root2);
    
    
    
     
	}
}
